{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","url","min","max","Math","ceil","floor","random","contest","this","randomInt","problem","String","fromCharCode","charCodeAt","console","log","setState","href","onClick","handleClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAkCeA,E,kDA/Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACC,IAAK,0DAFH,E,sDAKRC,EAAIC,GAGZ,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,K,oCAIhD,IAAMM,EAAUC,KAAKC,UAAU,IAAI,KAC7BC,EAAUC,OAAOC,aAAaJ,KAAKC,UAAU,EAAE,GAAK,IAAII,WAAW,IACzEC,QAAQC,IAAI,kCAAWR,EAAU,iBAASG,GAE1CF,KAAKQ,SAAS,CAAChB,IAAK,kCAAoCO,EAAU,aAAeA,EAAU,IAAMG,M,+BAG1F,IAAD,OACN,OACE,gCACE,mDACA,sJACA,8BAAK,mBAAGO,KAAMT,KAAKT,MAAMC,IAApB,SAA0BQ,KAAKT,MAAMC,QAC1C,wBAAQkB,QAAS,WAAO,EAAKC,eAA7B,mD,GA1BUC,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.631bf78f.chunk.js","sourcesContent":["import React from \"react\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {url: \"ここにリンクがくる\",}\n  }\n\n  randomInt(min,max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  handleClick(){\n    const contest = this.randomInt(126,187);\n    const problem = String.fromCharCode(this.randomInt(0,3) + 'a'.charCodeAt(0));\n    console.log(\"コンテスト:\" + contest + \" 問題:\" + problem);\n\n    this.setState({url: \"https://atcoder.jp/contests/abc\" + contest + \"/tasks/abc\" + contest + \"_\" + problem});\n  }\n\n  render(){\n    return(\n      <div>\n        <h3>AtCoder URL Maker</h3>\n        <p>令和ABCのA~C問題のURLがランダムに生成されます</p>\n        <div><a href={this.state.url}>{this.state.url}</a></div>\n        <button onClick={() => {this.handleClick()}}>リンク生成</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}