{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","url","min","max","Math","ceil","floor","random","contest","this","randomInt","problem","String","fromCharCode","charCodeAt","console","log","setState","href","onClick","handleClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAmCeA,E,kDAhCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACC,IAAK,0DAFH,E,sDAKRC,EAAIC,GAGZ,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,K,oCAIhD,IAAMM,EAAUC,KAAKC,UAAU,IAAI,KAC7BC,EAAUC,OAAOC,aAAaJ,KAAKC,UAAU,EAAE,GAAK,IAAII,WAAW,IACzEC,QAAQC,IAAI,kCAAWR,EAAU,iBAASG,GAE1CF,KAAKQ,SAAS,CAAChB,IAAK,kCAAoCO,EAAU,aAAeA,EAAU,IAAMG,M,+BAG1F,IAAD,OACN,OACE,gCACE,6DACA,sJACA,kHACA,8BAAK,mBAAGO,KAAMT,KAAKT,MAAMC,IAApB,SAA0BQ,KAAKT,MAAMC,QAC1C,wBAAQkB,QAAS,WAAO,EAAKC,eAA7B,mD,GA3BUC,IAAMC,WCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84491f75.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {url: \"ここにリンクがくる\",}\r\n  }\r\n\r\n  randomInt(min,max){\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  handleClick(){\r\n    const contest = this.randomInt(212,249);\r\n    const problem = String.fromCharCode(this.randomInt(0,4) + 'a'.charCodeAt(0));\r\n    console.log(\"コンテスト:\" + contest + \" 問題:\" + problem);\r\n\r\n    this.setState({url: \"https://atcoder.jp/contests/abc\" + contest + \"/tasks/abc\" + contest + \"_\" + problem});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h3>AtCoder URL Maker(LT用)</h3>\r\n        <p>令和ABCのA~D問題のURLがランダムに生成されます</p>\r\n        <h1>発表時間中にACできたら勝ち！</h1>\r\n        <div><a href={this.state.url}>{this.state.url}</a></div>\r\n        <button onClick={() => {this.handleClick()}}>リンク生成</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}